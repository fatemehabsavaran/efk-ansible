services:
  es01:
    image: elasticsearch:${STACK_VERSION}
    container_name: elastic
    # ports:
    #   - "127.0.0.1:9200:9200"
    environment:
      - discovery.type= single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - discovery.type=single-node

    volumes:
      - es01:/usr/share/elasticsearch/data
    networks:
      - elk

    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1


  kibana:
    image: kibana:7.17.17
    container_name: kibana
    volumes:
      - kibanadata:/usr/share/kibana/data
    depends_on:
      - es01
    environment:
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: http://es01:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
      
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.kibana.entrypoints=http,https"
      - "traefik.http.routers.kibana.rule=Host(`${HOST_NAME}`)"
      - "traefik.http.routers.kibana.tls.certresolver=letsencrypt"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"
      - "traefik.http.middlewares.kibana-auth.basicauth.users=${traefik_dashboard_username}:${traefik_dashboard_password}"
      - "traefik.http.routers.kibana.middlewares=kibana-auth"
    networks:
      - elk
      - web

  fluentd:
    container_name: fluentd
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./fluent.conf:/fluentd/etc/fluent.conf"
    depends_on:
      - "es01"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - elk
   
volumes:
  es01:
  kibanadata:

networks:
  elk:
    external: true
  web:
    external: true
